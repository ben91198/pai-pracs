ADCPORT 	EQU 	P1
ADCCS 		EQU		P2^0
ADCRDBAR 	EQU		P2^1
ADCWRBAR	EQU 	P2^2
ADCINTR		EQU		P2^3

	org 0
	ljmp start

Delay:							/*Delay for 65535uS*/
	mov r0,#0FFh
	mov r1,#0FFh
here:	
	djnz r1, here
	mov r1,#0Fh
	djnz r0, here
	ret

ReadADC:

start_conv:
	clr ADCCS     //make CS low for selecting ADC
	clr ADCWRBAR  //make WR low & then high with delay so that Low to High pulse is 			  	applied on WR signal of ADC & this will start the conversion
	lcall Delay
	setb ADCWRBAR			                                           
	lcall Delay

waitforintr:
	jnb ADCINTR, ReadData  //poll for INTR pin to go low: this signals the end of 				conversion 
	sjmp waitforintr

ReadData:setb ADCRDBAR
	lcall Delay	//make RD High & then Low with delay so that  High 			to Low pulse is applied on RD signal of ADC & this            			will enable the internal buffer & digital data will be avilable on 			external data lines. 
	clr ADCRDBAR
	mov a, ADCPORT	// read the data into the microcontroller
	ret

Display_data:cpl a	//make RD High & then Low with delay so that  High to Low 			  pulse is applied on RD signal of ADC
	mov P2,a
	ret
	
start:			  	
	lcall ReadADC		;Return Digial data  from ADC into accumulator
	lcall Display_data      ; Display digital output generated by ADC on LEDs
	
loop1:
	sjmp Loop1

END